#!/bin/bash
echo "=================================================="
echo "   _  ______  ___  __________________";
echo "  / |/ / __ \/ _ \/ __/  _/ __/_  __/";
echo " /    / /_/ / // / _/_/ /_\ \  / /   ";
echo "/_/|_/\____/____/___/___/___/ /_/    ";
echo -e "\e[0m"
echo "=================================================="                                     


sleep 2

# DEGISKENLER by Nodeist
TT_WALLET=wallet
TT=teritorid
TT_ID=teritori-testnet-v2
TT_PORT=45
TT_FOLDER=.teritorid
TT_FOLDER2=teritori-chain
TT_VER=teritori-testnet-v2
TT_REPO=https://github.com/TERITORI/teritori-chain
TT_GENESIS=https://raw.githubusercontent.com/TERITORI/teritori-chain/main/testnet/teritori-testnet-v2/genesis.json
TT_ADDRBOOK=
TT_MIN_GAS=0
TT_DENOM=utori
TT_SEEDS=
TT_PEERS=96b55467792a143e0169684f0e8da9a9aeb97af4@23.88.77.188:28656,4eb8b8bed6aecc52dccf21fd1e9432e071659db2@38.242.154.39:36656,986cdc276eea5fcb205ea3c66503c0610f99895d@95.216.140.117:26656,545b1fe982b92aeb9f1eadd05ab0954b38eba402@194.163.177.240:26656,0d19829b0dd1fc324cfde1f7bc15860c896b7ac1@65.108.121.240:27656,34df38933c32ee21078c1d79787d76668f398b9e@89.163.231.30:36656,0248e2989a8a4f6ad87cbe0490c08908a2c2da7f@5.199.133.165:26656,691efb2bee7b585c1f434d934abf18428d0b8ff1@161.97.91.254:26656,cd363d841f4dab90f290aab21c97f8d80a93a028@38.242.154.35:36656,a1c845585abbd8490ecbbcc7f96ff3b027cbed88@38.242.154.40:36656
sleep 1

echo "export TT_WALLET=${TT_WALLET}" >> $HOME/.bash_profile
echo "export TT=${TT}" >> $HOME/.bash_profile
echo "export TT_ID=${TT_ID}" >> $HOME/.bash_profile
echo "export TT_PORT=${TT_PORT}" >> $HOME/.bash_profile
echo "export TT_FOLDER=${TT_FOLDER}" >> $HOME/.bash_profile
echo "export TT_FOLDER2=${TT_FOLDER2}" >> $HOME/.bash_profile
echo "export TT_VER=${TT_VER}" >> $HOME/.bash_profile
echo "export TT_REPO=${TT_REPO}" >> $HOME/.bash_profile
echo "export TT_GENESIS=${TT_GENESIS}" >> $HOME/.bash_profile
echo "export TT_PEERS=${TT_PEERS}" >> $HOME/.bash_profile
echo "export TT_SEED=${TT_SEED}" >> $HOME/.bash_profile
echo "export TT_MIN_GAS=${TT_MIN_GAS}" >> $HOME/.bash_profile
echo "export TT_DENOM=${TT_DENOM}" >> $HOME/.bash_profile
source $HOME/.bash_profile

sleep 1

if [ ! $TT_NODENAME ]; then
	read -p "NODE ISMI YAZINIZ: " TT_NODENAME
	echo 'export TT_NODENAME='$TT_NODENAME >> $HOME/.bash_profile
fi

echo -e "NODE ISMINIZ: \e[1m\e[32m$TT_NODENAME\e[0m"
echo -e "CUZDAN ISMINIZ: \e[1m\e[32m$TT_WALLET\e[0m"
echo -e "CHAIN ISMI: \e[1m\e[32m$TT_ID\e[0m"
echo -e "PORT NUMARANIZ: \e[1m\e[32m$TT_PORT\e[0m"
echo '================================================='

sleep 2


# GUNCELLEMELER by Nodeist
echo -e "\e[1m\e[32m1. GUNCELLEMELER YUKLENIYOR... \e[0m" && sleep 1
sudo apt update && sudo apt upgrade -y


# GEREKLI PAKETLER by Nodeist
echo -e "\e[1m\e[32m2. GEREKLILIKLER YUKLENIYOR... \e[0m" && sleep 1
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

# GO KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. GO KURULUYOR... \e[0m" && sleep 1
ver="1.18.2"
cd $HOME
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"
rm "go$ver.linux-amd64.tar.gz"
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile
source ~/.bash_profile
go version

sleep 1

# KUTUPHANE KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. REPO YUKLENIYOR... \e[0m" && sleep 1
cd $HOME
git clone $TT_REPO
cd $TT_FOLDER2
git checkout $TT_VER
make install

sleep 1

# KONFIGURASYON by Nodeist
echo -e "\e[1m\e[32m1. KONFIGURASYONLAR AYARLANIYOR... \e[0m" && sleep 1
$TT config chain-id $TT_ID
$TT config keyring-backend file
$TT init $TT_NODENAME --chain-id $TT_ID

# ADDRBOOK ve GENESIS by Nodeist
wget $TT_GENESIS -O $HOME/$TT_FOLDER/config/genesis.json
wget $TT_ADDRBOOK -O $HOME/$TT_FOLDER/config/addrbook.json

# EŞLER VE TOHUMLAR by Nodeist
SEEDS="$TT_SEEDS"
PEERS="$TT_PEERS"
sed -i -e "s/^seeds *=.*/seeds = \"$SEEDS\"/; s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/$TT_FOLDER/config/config.toml

sleep 1


# config pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="50"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/$TT_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/$TT_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/$TT_FOLDER/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/$TT_FOLDER/config/app.toml


# ÖZELLEŞTİRİLMİŞ PORTLAR by Nodeist
sed -i.bak -e "s%^proxy_app = \"tcp://127.0.0.1:26658\"%proxy_app = \"tcp://127.0.0.1:${TT_PORT}658\"%; s%^laddr = \"tcp://127.0.0.1:26657\"%laddr = \"tcp://127.0.0.1:${TT_PORT}657\"%; s%^pprof_laddr = \"localhost:6060\"%pprof_laddr = \"localhost:${TT_PORT}060\"%; s%^laddr = \"tcp://0.0.0.0:26656\"%laddr = \"tcp://0.0.0.0:${TT_PORT}656\"%; s%^prometheus_listen_addr = \":26660\"%prometheus_listen_addr = \":${TT_PORT}660\"%" $HOME/$TT_FOLDER/config/config.toml
sed -i.bak -e "s%^address = \"tcp://0.0.0.0:1317\"%address = \"tcp://0.0.0.0:${TT_PORT}317\"%; s%^address = \":8080\"%address = \":${TT_PORT}080\"%; s%^address = \"0.0.0.0:9090\"%address = \"0.0.0.0:${TT_PORT}090\"%; s%^address = \"0.0.0.0:9091\"%address = \"0.0.0.0:${TT_PORT}091\"%" $HOME/$TT_FOLDER/config/app.toml
sed -i.bak -e "s%^node = \"tcp://localhost:26657\"%node = \"tcp://localhost:${TT_PORT}657\"%" $HOME/$TT_FOLDER/config/client.toml

# PROMETHEUS AKTIVASYON by Nodeist
sed -i -e "s/prometheus = false/prometheus = true/" $HOME/$TT_FOLDER/config/config.toml

# MINIMUM GAS AYARI by Nodeist
sed -i -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.00125$TT_DENOM\"/" $HOME/$TT_FOLDER/config/app.toml

# INDEXER AYARI by Nodeist
indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/$TT_FOLDER/config/config.toml

# RESET by Nodeist
$TT tendermint unsafe-reset-all --home $HOME/$TT_FOLDER

echo -e "\e[1m\e[32m4. SERVIS BASLATILIYOR... \e[0m" && sleep 1
# create service
sudo tee /etc/systemd/system/$TT.service > /dev/null <<EOF
[Unit]
Description=$TT
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which $TT) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF


# SERVISLERI BASLAT by Nodeist
sudo systemctl daemon-reload
sudo systemctl enable $TT
sudo systemctl restart $TT

echo '=============== KURULUM TAMAM! by Nodeist ==================='
echo -e 'LOGLARI KONTROL ET: \e[1m\e[32mjournalctl -fU teritorid -o cat\e[0m'
echo -e "SENKRONIZASYONU KONTROL ET: \e[1m\e[32mcurl -s localhost:${TT_PORT}657/status | jq .result.sync_info\e[0m"

source $HOME/.bash_profile
