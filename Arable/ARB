#!/bin/bash
echo "=================================================="
echo "   _  ______  ___  __________________";
echo "  / |/ / __ \/ _ \/ __/  _/ __/_  __/";
echo " /    / /_/ / // / _/_/ /_\ \  / /   ";
echo "/_/|_/\____/____/___/___/___/ /_/    ";
echo -e "\e[0m"
echo "=================================================="                                     


sleep 2

# DEGISKENLER by Nodeist
ARB_WALLET=wallet
ARB=acred
ARB_ID=bamboo_9000-1
ARB_PORT=28
ARB_FOLDER=.acred
ARB_FOLDER2=acrechain
ARB_VER=testnet_bamboo
ARB_REPO=https://github.com/ArableProtocol/acrechain
ARB_GENESIS=https://raw.githubusercontent.com/ArableProtocol/acrechain/testnet_bamboo/networks/bamboo/genesis.json
ARB_ADDRBOOK=
ARB_MIN_GAS=0
ARB_DENOM=uacre
ARB_SEEDS=
ARB_PEERS=44dd124ca34742245ad906f9f6ea377fae3af0cf@168.100.9.100:26656,6477921cdd4ba4503a1a2ff1f340c9d6a0e7b4a0@168.100.10.133:26656,9b53496211e75dbf33680b75e617830e874c8d93@168.100.8.9:26656,c55d79d6f76045ff7b68dc2bf6655348ebbfd795@168.100.8.60:26656

sleep 1

echo "export ARB_WALLET=${ARB_WALLET}" >> $HOME/.bash_profile
echo "export ARB=${ARB}" >> $HOME/.bash_profile
echo "export ARB_ID=${ARB_ID}" >> $HOME/.bash_profile
echo "export ARB_PORT=${ARB_PORT}" >> $HOME/.bash_profile
echo "export ARB_FOLDER=${ARB_FOLDER}" >> $HOME/.bash_profile
echo "export ARB_FOLDER2=${ARB_FOLDER2}" >> $HOME/.bash_profile
echo "export ARB_VER=${ARB_VER}" >> $HOME/.bash_profile
echo "export ARB_REPO=${ARB_REPO}" >> $HOME/.bash_profile
echo "export ARB_GENESIS=${ARB_GENESIS}" >> $HOME/.bash_profile
echo "export ARB_PEERS=${ARB_PEERS}" >> $HOME/.bash_profile
echo "export ARB_SEED=${ARB_SEED}" >> $HOME/.bash_profile
echo "export ARB_MIN_GAS=${ARB_MIN_GAS}" >> $HOME/.bash_profile
echo "export ARB_DENOM=${ARB_DENOM}" >> $HOME/.bash_profile
source $HOME/.bash_profile

sleep 1

if [ ! $ARB_NODENAME ]; then
	read -p "NODE ISMI YAZINIZ: " ARB_NODENAME
	echo 'export ARB_NODENAME='$ARB_NODENAME >> $HOME/.bash_profile
fi

echo -e "NODE ISMINIZ: \e[1m\e[32m$ARB_NODENAME\e[0m"
echo -e "CUZDAN ISMINIZ: \e[1m\e[32m$ARB_WALLET\e[0m"
echo -e "CHAIN ISMI: \e[1m\e[32m$ARB_ID\e[0m"
echo -e "PORT NUMARANIZ: \e[1m\e[32m$ARB_PORT\e[0m"
echo '================================================='

sleep 2


# GUNCELLEMELER by Nodeist
echo -e "\e[1m\e[32m1. GUNCELLEMELER YUKLENIYOR... \e[0m" && sleep 1
sudo apt update && sudo apt upgrade -y


# GEREKLI PAKETLER by Nodeist
echo -e "\e[1m\e[32m2. GEREKLILIKLER YUKLENIYOR... \e[0m" && sleep 1
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential bsdmainutils git make ncdu gcc git jq chrony liblz4-tool -y

# GO KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. GO KURULUYOR... \e[0m" && sleep 1
ver="1.18.2"
cd $HOME
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"
rm "go$ver.linux-amd64.tar.gz"
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> ~/.bash_profile
source ~/.bash_profile
go version

sleep 1

# KUTUPHANE KURULUMU by Nodeist
echo -e "\e[1m\e[32m1. REPO YUKLENIYOR... \e[0m" && sleep 1
cd $HOME
git clone $ARB_REPO
cd $ARB_FOLDER2
git checkout $ARB_VER
make install

sleep 1

# KONFIGURASYON by Nodeist
echo -e "\e[1m\e[32m1. KONFIGURASYONLAR AYARLANIYOR... \e[0m" && sleep 1
$ARB config chain-id $ARB_ID
$ARB config keyring-backend file
$ARB init $ARB_NODENAME --chain-id $ARB_ID

# ADDRBOOK ve GENESIS by Nodeist
wget $ARB_GENESIS -O $HOME/$ARB_FOLDER/config/genesis.json
wget $ARB_ADDRBOOK -O $HOME/$ARB_FOLDER/config/addrbook.json

# EŞLER VE TOHUMLAR by Nodeist
SEEDS="$ARB_SEEDS"
PEERS="$ARB_PEERS"
sed -i -e "s/^seeds *=.*/seeds = \"$SEEDS\"/; s/^persistent_peers *=.*/persistent_peers = \"$PEERS\"/" $HOME/$ARB_FOLDER/config/config.toml

sleep 1


# config pruning
pruning="custom"
pruning_keep_recent="100"
pruning_keep_every="0"
pruning_interval="50"
sed -i -e "s/^pruning *=.*/pruning = \"$pruning\"/" $HOME/$ARB_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"$pruning_keep_recent\"/" $HOME/$ARB_FOLDER/config/app.toml
sed -i -e "s/^pruning-keep-every *=.*/pruning-keep-every = \"$pruning_keep_every\"/" $HOME/$ARB_FOLDER/config/app.toml
sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"$pruning_interval\"/" $HOME/$ARB_FOLDER/config/app.toml


# ÖZELLEŞTİRİLMİŞ PORTLAR by Nodeist
sed -i.bak -e "s%^proxy_app = \"tcp://127.0.0.1:26658\"%proxy_app = \"tcp://127.0.0.1:${ARB_PORT}658\"%; s%^laddr = \"tcp://127.0.0.1:26657\"%laddr = \"tcp://127.0.0.1:${ARB_PORT}657\"%; s%^pprof_laddr = \"localhost:6060\"%pprof_laddr = \"localhost:${ARB_PORT}060\"%; s%^laddr = \"tcp://0.0.0.0:26656\"%laddr = \"tcp://0.0.0.0:${ARB_PORT}656\"%; s%^prometheus_listen_addr = \":26660\"%prometheus_listen_addr = \":${ARB_PORT}660\"%" $HOME/$ARB_FOLDER/config/config.toml
sed -i.bak -e "s%^address = \"tcp://0.0.0.0:1317\"%address = \"tcp://0.0.0.0:${ARB_PORT}317\"%; s%^address = \":8080\"%address = \":${ARB_PORT}080\"%; s%^address = \"0.0.0.0:9090\"%address = \"0.0.0.0:${ARB_PORT}090\"%; s%^address = \"0.0.0.0:9091\"%address = \"0.0.0.0:${ARB_PORT}091\"%" $HOME/$ARB_FOLDER/config/app.toml
sed -i.bak -e "s%^node = \"tcp://localhost:26657\"%node = \"tcp://localhost:${ARB_PORT}657\"%" $HOME/$ARB_FOLDER/config/client.toml

# PROMETHEUS AKTIVASYON by Nodeist
sed -i -e "s/prometheus = false/prometheus = true/" $HOME/$ARB_FOLDER/config/config.toml

# MINIMUM GAS AYARI by Nodeist
sed -i -e "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0.00125$ARB_DENOM\"/" $HOME/$ARB_FOLDER/config/app.toml

# INDEXER AYARI by Nodeist
indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/$ARB_FOLDER/config/config.toml

# RESET by Nodeist
$ARB tendermint unsafe-reset-all --home $HOME/$ARB_FOLDER

echo -e "\e[1m\e[32m4. SERVIS BASLATILIYOR... \e[0m" && sleep 1
# create service
sudo tee /etc/systemd/system/$ARB.service > /dev/null <<EOF
[Unit]
Description=$ARB
After=network.target
[Service]
Type=simple
User=$USER
ExecStart=$(which $ARB) start
Restart=on-failure
RestartSec=10
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF


# SERVISLERI BASLAT by Nodeist
sudo systemctl daemon-reload
sudo systemctl enable $ARB
sudo systemctl restart $ARB

echo '=============== KURULUM TAMAM! by Nodeist ==================='
echo -e 'LOGLARI KONTROL ET: \e[1m\e[32mjjournalctl -fU celestia-appd -o cat\e[0m'
echo -e "SENKRONIZASYONU KONTROL ET: \e[1m\e[32mcurl -s localhost:${ARB_PORT}657/status | jq .result.sync_info\e[0m"

source $HOME/.bash_profile
